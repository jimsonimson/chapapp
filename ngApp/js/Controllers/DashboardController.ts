"use strict";
namespace app.Controllers{
  export class DashboardController{
    public date;
    public d;
    public m;
    public y;
    public currentView;

    public eventSource = [this.events];

    public appointments;

    public events = [
      {title: 'Click for Google',start: new Date(this.y, this.m, 28),end: new Date(this.y, this.m, 29),url: 'http://google.com/'},
      {title: 'Long Event',start: new Date('Thu Oct 17 2013 10:00:00 GMT+0530 (IST)'),end: new Date('Thu Oct 17 2013 17:00:00 GMT+0530 (IST)')},
      {id: 999,title: 'Repeating Event',start: new Date('Thu Oct 17 2013 09:00:00 GMT+0530 (IST)'),allDay: false},
      {id: 999,title: 'Repeating Event',start: new Date(this.y, this.m, this.d + 4, 16, 0),allDay: false},
      {title: 'Birthday Party',start: new Date(this.y, this.m, this.d + 1, 19, 0),end: new Date(this.y, this.m, this.d + 1, 22, 30),allDay: false},
      {title: 'All Day Event',start: new Date('Thu Oct 17 2013 09:00:00 GMT+0530 (IST)')}
    ];



    //with this you can handle the click on the events
    $scope.eventClick = function(event){
        $scope.$apply(function(){
          $scope.alertMessage = (event.title + ' is clicked');
        });
    };


    //with this you can handle the events that generated by each page render process
    $scope.renderView = function(view){
        var date = new Date(view.calendar.getDate());
        $scope.currentDate = date.toDateString();
        $scope.$apply(function(){
          $scope.alertMessage = ('Page render with date '+ $scope.currentDate);
        });
    };

      //with this you can handle the events that generated when we change the view i.e. Month, Week and Day
     public changeView(view, calendar) {
         this.currentView = view;
         calendar.fullCalendar('changeView',view);
         this.$apply(function(){
           this.alertMessage = ('You are looking at '+ this.currentView);
         });
     };

    //configure calendar
    public uiConfig = {
      calendar: {
        height: 450,
        editable: true,
        displayEventTime: true,
        header: {
          left: 'month basicweek basicDay agendaWeek agendaDay',
          center: 'title',
          right: 'today prev, next'
        },
        eventClick: function (event){
          this.SelectedEvent = event;
        },
        eventAfterAllRender: function(){
          if (this.events.length > 0 && this.isFirstTime){
            this.uiCalendarConfig.calendars.myCalendar.fullCallendar('gotoDate', this.events[0].start);
          }
        }
      }
    };

    constructor(
      private AppointmentService: app.Services.AppointmentService,
      private $http,
      private uiCalendarConfig,
      private $scope,
      private $location: ng.ILocationService
    ){
      this.appointments = AppointmentService.getAllBarberAppointments();
      console.log(this.appointments);
      
      this.date = new Date();
      this.d = this.date.getDate();
      this.m = this.date.getMonth();
      this.y = this.date.getFullYear();
      this.currentView = "month";
    };
  }
  angular.module('app').controller('DashboardController', DashboardController);
};
